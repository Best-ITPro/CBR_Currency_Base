Подробная информация по данному проекту описана в в файле cbr.currency.txt в корне проекта, а так же на на сайте

http://best-itpro.ru


## XML Parser CBR Currency Base - Официальные курсы валют на заданную дату, устанавливаемые ежедневно

Получение данных о ежедневных курсах валют ЦБ РФ, используя официальный XML http://www.cbr.ru/development/SXML/


Исходный код проекта: https://github.com/Best-ITPro/CBR_Currency_Base

## Установка XML Parser CBR Currency Base


Создаем папку проекта и разворачиваем там архив с исходным кодом.

Подразумевается, что настройку веб-сервера Вы производите самостоятельно, настройте сервер и, при помощи phpmyadmin или другого ПО создайте базу данных для проекта. Информация по подключению к базе данных будет указана ниже в файле .env

Переходим в папку проеката и запускаем команды:

1). Запускаем команду: composer install

2). Запускаем команду: npm install

3). Копируем фал .env.example в .env и редактируем файл .env:

APP_NAME=CBR.Currency.Base (или любое другое имя проекта)

APP_URL=http://ВашДомен

APP_DEBUG=true (если Вам нужно поработать с отладчиком Laravel Debug)
или

APP_DEBUG=false (на продакшн)

DB_HOST=localhost

DB_DATABASE=cbr.currency

DB_USERNAME=ВашЛогинКБазе

DB_PASSWORD=ВашПарольКБазе

Можно настроить smtp (на примере Яндекс):

MAIL_DRIVER=smtp

MAIL_HOST=smtp.yandex.ru

MAIL_PORT=587

MAIL_USERNAME=ВАШ_ЛОГИН

MAIL_PASSWORD=ВАШ_ПАРОЛЬ

MAIL_ENCRYPTION=tls

MAIL_FROM_ADDRESS=ВАШ_EMAIL

MAIL_FROM_NAME="${APP_NAME}"

4). Запускаем миграции: php artisan migrate

5). Генерируем ключ php artisan key:generate

6). Очищаем кеш php artisan config:cache

7). Меняем права доступа к системным папкам и делаем ссылку на папку загрузки файлов:

sudo chown www-data:www-data bootstrap/cache

sudo chmod -R 777 bootstrap/cache/*

sudo chown www-data:www-data storage/*

sudo chmod -R 777 storage/*

8). Делаем ссылку на папку загрузки файлов (на перспективу):
sudo php artisan storage:link

9). Для установки Yarn в папке проекта надо запустить команды:

npm i yarn -g

потом: yarn

10). Запускаем сборку фронтенда командой: npm run dev

11). Подразумевается, что настройку веб-сервера Вы производите самостоятельно, при настройке сайта указывайте коренную папку сайта следующим образом: папка_сайта/public/

12). Заходим через браузер на сайт собранного проекта: http://АдресПроектаВВашейСети

13). При успешной загрузке стартовой страницы нужно сделать первоначальню загрузку данных с сайта ЦБ РФ:

14). Делаем первоначальную загрузку перечня валют - красная кнопка - "Проверить обновление перечня" - загружаются данные, потом кнопка "Назад"

15). Делаем первоначальную загрузку курсов валют - зеленая кнопка - "Проверить обновления курсов" - загружаются данные, потом кнопка "Назад"

16). Добавляем в крон задание:

пять звездочек cd /ПапкаСайтаНаВашемСервере/ && php artisan schedule:run >> /dev/null 2>&1

17). Наслаждаемся программой.

Обновления проверяются дважды в день - в 12 и в 15 часов.


Различные управляющие константы заданы в модели Currency. Одной из таких констант является глубина загружаемой базы курсов, это DATE_FROM = "01/06/2019".
Так как первоначальная загрузка может занять продолжительное время, рекомендуем перед ее запуском установить в Вашем php.ini параметр max_execution_time = 300.
После загрузки можно вернуть его назад max_execution_time = 30.
Если в процессе первоначальной загрузки Вы не сделали этого, и произошла ошибка, очистите таблицу currency_dates и запустите процесс загрузки заново.

Демонстрацию проекта можно увидеть по ссылке:  http://courses.best-itpro.ru

Исходный код проекта доступен по ссылке: https://github.com/Best-ITPro/CBR_Currency_Base

Пример простого скрипта парсинга курсов валют под 1С-Битрикс: http://best-itpro.ru/cbr/


;)

